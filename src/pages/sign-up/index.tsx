import { SignUpForm } from "@/components/form/auth";
import { AuthLayout } from "@/components/layout";
import { Button } from "@/components/ui/button";
import { Form } from "@/components/ui/form";
import { signUpSchema, type SignUpSchema } from "@/server/schema/AuthSchema";
import { api } from "@/utils/api";
import { zodResolver } from "@hookform/resolvers/zod";
import { BookAudioIcon } from "lucide-react";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { useState, type ReactElement } from "react";
import { useForm } from "react-hook-form";
import type z from "zod";

export default function SignUp() {
  const router = useRouter();
  const [isLoading, setIsLoading] = useState(false);

  const form = useForm<z.infer<typeof signUpSchema>>({
    resolver: zodResolver(signUpSchema),
    defaultValues: {
      name: "",
      email: "",
      password: "",
      confirmPassword: "",
    },
  });

  const { mutate: signUp } = api.auth.signUp.useMutation({
    onMutate: () => {
      setIsLoading(true);
    },
    onError: (error) => {
      if (error.data?.code === "CONFLICT") {
        form.setError("email", {
          type: "manual",
          message: error.message || "An error occurred during sign-up",
        });
      }
    },
    onSettled: () => {
      setIsLoading(false);
    },
    onSuccess: async () => {
      form.reset();
      await router.push("/sign-in");
    },
  });

  const onSignUp = (data: SignUpSchema) => {
    signUp(data);
  };

  return (
    <>
      <Head>
        <title>Form - Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="grid h-full w-full p-0 md:grid-cols-2">
        <div className="bg-muted relative hidden md:block">
          <img
            src="/placeholder.svg"
            alt="Image"
            className="absolute inset-0 h-full w-full object-cover dark:brightness-[0.2] dark:grayscale"
          />
        </div>
        <div className="mx-auto my-auto flex h-full max-h-3/4 w-full max-w-md flex-col items-center justify-between">
          <div className="flex flex-col items-center text-center">
            <BookAudioIcon className="mb-2 size-12" />
            <h1 className="text-2xl font-bold">Create an account</h1>
            <p className="text-muted-foreground text-balance">
              Create an account to get started
            </p>
          </div>
          <Form {...form}>
            <SignUpForm onSignUp={onSignUp} isLoading={isLoading} />
          </Form>
          <div className="text-center text-sm">
            Already have an account?{" "}
            <Button variant="link" className="p-0" asChild>
              <Link href="/sign-in">Sign In</Link>
            </Button>
          </div>
        </div>
      </div>
    </>
  );
}

SignUp.getLayout = function getLayout(page: ReactElement) {
  return <AuthLayout>{page}</AuthLayout>;
};
